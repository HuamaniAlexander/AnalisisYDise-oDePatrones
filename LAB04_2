import java.util.*;

public class MezclaPolifasica {
    public static List<Integer> ordenar(List<Integer> datos) {
        List<List<Integer>> secuencias = dividirSecuencias(datos);
        Queue<List<Integer>> cola = new LinkedList<>(secuencias);

        while (cola.size() > 1) {
            List<Integer> a = cola.poll();
            List<Integer> b = cola.poll();
            cola.offer(mezclar(a, b));
        }

        return cola.poll();
    }

    private static List<List<Integer>> dividirSecuencias(List<Integer> datos) {
        List<List<Integer>> secuencias = new ArrayList<>();
        List<Integer> actual = new ArrayList<>();
        actual.add(datos.get(0));
        for (int i = 1; i < datos.size(); i++) {
            if (datos.get(i) >= datos.get(i - 1)) {
                actual.add(datos.get(i));
            } else {
                secuencias.add(new ArrayList<>(actual));
                actual.clear();
                actual.add(datos.get(i));
            }
        }
        secuencias.add(actual);
        return secuencias;
    }

    private static List<Integer> mezclar(List<Integer> a, List<Integer> b) {
        List<Integer> resultado = new ArrayList<>();
        int i = 0, j = 0;
        while (i < a.size() && j < b.size()) {
            if (a.get(i) < b.get(j)) {
                resultado.add(a.get(i++));
            } else {
                resultado.add(b.get(j++));
            }
        }
        while (i < a.size()) resultado.add(a.get(i++));
        while (j < b.size()) resultado.add(b.get(j++));
        return resultado;
    }

    public static void main(String[] args) {
        List<Integer> datos = Arrays.asList(8, 1, 3, 7, 2, 5, 6, 9, 4);
        System.out.println("Ordenado: " + ordenar(datos));
    }
}
